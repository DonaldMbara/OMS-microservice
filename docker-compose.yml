version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      -  "2181:2181"
  
  broker:
    image: confluentinc/cp-kafka
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  mysql-order-system-db:
    container_name: mysql-order-system-db
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: Do1999ld#
      MYSQL_DB: ordersystemDB
    volumes:
      - ./mysql-order-system-db:/var/lib/mysql
      - ./local_database.sql:/docker-entrypoint-initdb.d/local-database.sql
    expose:
      - "3307"
    ports:
      - "3307:3307"
    command: --verbose --log-bin-index=/tmp/tmp.jeNHbS9fRW
    restart: unless-stopped


  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:latest
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    command: [ "start-dev", "--import-realm", "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    command:
      - "--zipkin.collector.sample-rate=1.0"
      - "--zipkin.query.lookback=31536000000"
      - "--logging.level.root=INF"


  discovery-server:
    image: donmba/discovery-server
    pull_policy: always
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_SERVER_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - zipkin

  api-gateway:
    image: donmba/api-gateway
    pull_policy: always
    container_name: api-gateway
    ports:
      - "8088:8088"
    expose:
      - "8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  product-service:
    container_name: product-service
    image: donmba/product-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-order-system-db:3306/ordersystemDB
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - mysql-order-system-db
      - discovery-server
      - api-gateway

  order-service:
    container_name: order-service
    image: donmba/order-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-order-system-db:3306/ordersystemDB
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - mysql-order-system-db
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  inventory-service:
    container_name: inventory-service
    image: donmba/inventory-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-order-system-db:3306/ordersystemDB
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - mysql-order-system-db
      - discovery-server
      - api-gateway


  review-service:
    container_name: review-service
    image: donmba/review-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-order-system-db:3306/ordersystemDB
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - mysql-order-system-db
      - discovery-server
      - api-gateway

  notification-service:
    container_name: notification-service
    image: donmba/notification-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway

  customer-service:
    container_name: customer-service
    image: donmba/customer-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-order-system-db:3306/ordersystemDB
    depends_on:
      - mysql-order-system-db
      - discovery-server
      - api-gateway

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - inventory-service
      - order-service
      - product-service
      - notification-service
      - review-service
      - api-gateway
      - discovery-server
      - customer-service
  

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports: 
      - "3000:3000"
    links: 
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password